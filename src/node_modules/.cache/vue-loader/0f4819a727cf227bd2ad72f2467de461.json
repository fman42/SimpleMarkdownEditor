{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fman/Desktop/SimpleMarkdown/src/SimpleMarkdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fman/Desktop/SimpleMarkdown/src/SimpleMarkdown.vue","mtime":1608362566837},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUb29sYmFyIGZyb20gJy4vVG9vbGJhci52dWUnOwppbXBvcnQgSW5mb3JtYXRpb25Nb2RhbCBmcm9tICcuL01vZGFscy9JbmZvcm1hdGlvbi52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NpbXBsZU1hcmtkb3duJywKICAgIHByb3BzOiB7CiAgICAgICAgZGlzYWJsZWRUb29sczogewogICAgICAgICAgICB0eXBlOiBBcnJheSwKICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBhdXRvU2F2ZTogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiA1MDAwOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY29udGVudDogJycsCiAgICAgICAgICAgIG1vZGFsc1Zpc2libGU6IHsKICAgICAgICAgICAgICAgIGluZm9ybWF0aW9uOiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5oaXN0b3J5U3RhY2sgPSBbXTsKICAgICAgICB0aGlzLmN1cnJlbnRJbmRleEhpc3RvcnlTdGFjayA9IDA7CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBpZiAoaXNOYU4odGhpcy5hdXRvU2F2ZSkpCiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuc2F2ZVRleHRhcmVhSGlzdG9yeSgpOwogICAgICAgIH0sIHRoaXMuYXV0b1NhdmUpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvKgogICAgICAgICAgICBUb29sYmFyJyBjYWxsYmFja3MKICAgICAgICAqLwogICAgICAgIGdldEJyYW5jaEZyb21IaXN0b3J5KGlzVW5kbykgewogICAgICAgICAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLmZldGNoQ29udGVudEZyb21IaXN0b3J5KGlzVW5kbyk7CiAgICAgICAgfSwKCiAgICAgICAgYXBwbHlGb3JtYXQoYWRkaXRpb25hbFN5bWJvbHMpIHsKICAgICAgICAgICAgaWYgKHRoaXMuJHJlZnMuZmllbGQuc2VsZWN0aW9uU3RhcnQgIT09IHRoaXMuJHJlZnMuZmllbGQuc2VsZWN0aW9uRW5kKXsKICAgICAgICAgICAgICAgIGNvbnN0IHN1YnN0cmluZyA9IGFkZGl0aW9uYWxTeW1ib2xzICsgYCR7dGhpcy5zZWxlY3RlZFRleHR9YCArIGFkZGl0aW9uYWxTeW1ib2xzOwogICAgICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5qb2luQ29udGVudFdpdGhFZGl0ZWRUZXh0KHN1YnN0cmluZyk7CiAgICAgICAgICAgIH0gZWxzZSAKICAgICAgICAgICAgICAgIHRoaXMuY29udGVudCA9IGFkZGl0aW9uYWxTeW1ib2xzICsgYCR7dGhpcy5jb250ZW50fWAgKyBhZGRpdGlvbmFsU3ltYm9sczsKCiAgICAgICAgICAgIHRoaXMuc2F2ZVRleHRhcmVhSGlzdG9yeSgpOwogICAgICAgIH0sCgogICAgICAgIHNob3dJbmZvcm1hdGlvbk1vZGFsKCkgewogICAgICAgICAgICB0aGlzLm1vZGFsc1Zpc2libGUuaW5mb3JtYXRpb24gPSAhdGhpcy5tb2RhbHNWaXNpYmxlLmluZm9ybWF0aW9uOwogICAgICAgIH0sCgogICAgICAgIGFwcGx5SGVhZGluZyhzeW1ib2xzKSB7CiAgICAgICAgICAgIHRoaXMuY29udGVudCA9IGAke3N5bWJvbHN9ICR7dGhpcy5zZWxlY3RlZFRleHR9YDsgCiAgICAgICAgfSwKCiAgICAgICAgY2hhbmdlQ2FzZSh0b0Nhc2UpIHsKICAgICAgICAgICAgbGV0IHVwZGF0ZWRDb250ZW50ID0gdGhpcy5jb250ZW50OwoKICAgICAgICAgICAgc3dpdGNoICh0b0Nhc2UpIHsKICAgICAgICAgICAgICAgIGNhc2UgJ3VwcGVyJzogewogICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRDb250ZW50ID0gdXBkYXRlZENvbnRlbnQudG9VcHBlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGNhc2UgJ2xvd2VyJzogewogICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRDb250ZW50ID0gdXBkYXRlZENvbnRlbnQudG9Mb3dlckNhc2UoKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGNvbnNvbGUuZXJyb3IoJ0Nhc2UgZm9yIHRoZSBjb250ZW50IGlzIG5vdCBmb3VuZCcpOyBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gdGhpcy5qb2luQ29udGVudFdpdGhFZGl0ZWRUZXh0KHVwZGF0ZWRDb250ZW50KTsKICAgICAgICAgICAgdGhpcy5zYXZlVGV4dGFyZWFIaXN0b3J5KCk7CiAgICAgICAgfSwKCiAgICAgICAgY2xlYXJBcmVhKCkgewogICAgICAgICAgICB0aGlzLmNvbnRlbnQgPSAnJzsKICAgICAgICB9LAoKICAgICAgICAvKgogICAgICAgICAgICBDb21wb25lbnQnIGZ1bmN0aW9ucwogICAgICAgICovCiAgICAgICAgc2F2ZVRleHRhcmVhSGlzdG9yeSgpIHsKICAgICAgICAgICAgY29uc3QgdmFsID0gdGhpcy5jb250ZW50LnRyaW0oKTsKCiAgICAgICAgICAgIGlmICh2YWwubGVuZ3RoID09PSAwIHx8IHRoaXMuaGlzdG9yeVN0YWNrLmluY2x1ZGVzKHZhbCkpCiAgICAgICAgICAgICAgICByZXR1cm47CgogICAgICAgICAgICB0aGlzLmhpc3RvcnlTdGFjay5wdXNoKHZhbCk7CiAgICAgICAgICAgIHRoaXMuY3VycmVudEluZGV4SGlzdG9yeVN0YWNrID0gdGhpcy5oaXN0b3J5U3RhY2subGVuZ3RoIC0gMTsKICAgICAgICB9LAoKICAgICAgICBqb2luQ29udGVudFdpdGhFZGl0ZWRUZXh0KGVkaXRlZFRleHQpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudC5zbGljZSgwLCB0aGlzLiRyZWZzLmZpZWxkLnNlbGVjdGlvblN0YXJ0KSArIGVkaXRlZFRleHQgKyB0aGlzLmNvbnRlbnQuc2xpY2UodGhpcy4kcmVmcy5maWVsZC5zZWxlY3Rpb25FbmQsIHRoaXMuY29udGVudC5sZW5ndGgpOwogICAgICAgIH0sCgogICAgICAgIGV4ZWN1dGVUb29sQ2FsbGJhY2soY2FsbGJhY2spIHsKICAgICAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykKICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjay5jYWxsKCk7CgogICAgICAgICAgICBpZiAodHlwZW9mIHRoaXNbY2FsbGJhY2submFtZV0gIT09ICdmdW5jdGlvbicpCiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcignTWV0aG9kIGlzIG5vdCBmb3VuZDogJyArIGNhbGxiYWNrLm5hbWUpOwoKICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdHlwZW9mIGNhbGxiYWNrWydhcmd1bWVudHMnXSAhPT0gIm9iamVjdCIgPyBbXSA6IGNhbGxiYWNrLmFyZ3VtZW50czsKICAgICAgICAgICAgdGhpc1tjYWxsYmFjay5uYW1lXS5hcHBseSh0aGlzLCBwYXJhbXMpOwogICAgICAgIH0sCgogICAgICAgIGZldGNoQ29udGVudEZyb21IaXN0b3J5KGlzVW5kb0FjdGlvbiA9IHRydWUpIHsKICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4SGlzdG9yeVN0YWNrID09PSAwICYmIGlzVW5kb0FjdGlvbikKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGhpcy5jb250ZW50ID0gJyc7CiAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuY3VycmVudEluZGV4SGlzdG9yeVN0YWNrID0gdGhpcy5jdXJyZW50SW5kZXhIaXN0b3J5U3RhY2sgLSAoaXNVbmRvQWN0aW9uID8gMSA6IC0xKTsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGlzdG9yeVN0YWNrW3RoaXMuY3VycmVudEluZGV4SGlzdG9yeVN0YWNrXTsKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBzZWxlY3RlZFRleHQ6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50LnNsaWNlKHRoaXMuJHJlZnMuZmllbGQuc2VsZWN0aW9uU3RhcnQsIHRoaXMuJHJlZnMuZmllbGQuc2VsZWN0aW9uRW5kKTsKICAgICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgIFRvb2xiYXIsCiAgICAgICAgSW5mb3JtYXRpb25Nb2RhbAogICAgfQp9Cg=="},{"version":3,"sources":["SimpleMarkdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"SimpleMarkdown.vue","sourceRoot":".","sourcesContent":["<template>\n    <div class=\"simple-markdown\" id=\"markdown_editor\">\n        <!-- Toolbar -->\n        <Toolbar :disabledTools=\"disabledTools\" v-on:action=\"executeToolCallback\"></Toolbar>\n        <!-- Field -->\n        <textarea class=\"simple-markdown__field\" ref=\"field\" v-on:change=\"saveTextareaHistory()\" v-model=\"content\">\n            \n        </textarea>\n        <!-- Modals -->\n        <InformationModal v-show=\"modalsVisible.information\"></InformationModal>\n    </div>\n</template>\n\n<script>\n    import Toolbar from './Toolbar.vue';\n    import InformationModal from './Modals/Information.vue';\n\n    export default {\n        name: 'SimpleMarkdown',\n        props: {\n            disabledTools: {\n                type: Array,\n                default: () => {\n                    return [];\n                }\n            },\n            autoSave: {\n                type: Number,\n                default: () => {\n                    return 5000;\n                }\n            }\n        },\n        data() {\n            return {\n                content: '',\n                modalsVisible: {\n                    information: false\n                }\n            }\n        },\n        created() {\n            this.historyStack = [];\n            this.currentIndexHistoryStack = 0;\n        },\n        mounted() {\n            if (isNaN(this.autoSave))\n                return;\n\n            setTimeout(() => {\n                this.saveTextareaHistory();\n            }, this.autoSave);\n        },\n        methods: {\n            /*\n                Toolbar' callbacks\n            */\n            getBranchFromHistory(isUndo) {\n                this.content = this.fetchContentFromHistory(isUndo);\n            },\n\n            applyFormat(additionalSymbols) {\n                if (this.$refs.field.selectionStart !== this.$refs.field.selectionEnd){\n                    const substring = additionalSymbols + `${this.selectedText}` + additionalSymbols;\n                    this.content = this.joinContentWithEditedText(substring);\n                } else \n                    this.content = additionalSymbols + `${this.content}` + additionalSymbols;\n\n                this.saveTextareaHistory();\n            },\n\n            showInformationModal() {\n                this.modalsVisible.information = !this.modalsVisible.information;\n            },\n\n            applyHeading(symbols) {\n                this.content = `${symbols} ${this.selectedText}`; \n            },\n\n            changeCase(toCase) {\n                let updatedContent = this.content;\n\n                switch (toCase) {\n                    case 'upper': {\n                        updatedContent = updatedContent.toUpperCase();\n                        break;\n                    }\n                    case 'lower': {\n                        updatedContent = updatedContent.toLowerCase();\n                        break;\n                    }\n                    default: console.error('Case for the content is not found'); break;\n                }\n\n                this.content = this.joinContentWithEditedText(updatedContent);\n                this.saveTextareaHistory();\n            },\n\n            clearArea() {\n                this.content = '';\n            },\n\n            /*\n                Component' functions\n            */\n            saveTextareaHistory() {\n                const val = this.content.trim();\n\n                if (val.length === 0 || this.historyStack.includes(val))\n                    return;\n\n                this.historyStack.push(val);\n                this.currentIndexHistoryStack = this.historyStack.length - 1;\n            },\n\n            joinContentWithEditedText(editedText) {\n                return this.content.slice(0, this.$refs.field.selectionStart) + editedText + this.content.slice(this.$refs.field.selectionEnd, this.content.length);\n            },\n\n            executeToolCallback(callback) {\n                if (typeof callback === 'function')\n                    return callback.call();\n\n                if (typeof this[callback.name] !== 'function')\n                    return console.error('Method is not found: ' + callback.name);\n\n                const params = typeof callback['arguments'] !== \"object\" ? [] : callback.arguments;\n                this[callback.name].apply(this, params);\n            },\n\n            fetchContentFromHistory(isUndoAction = true) {\n                if (this.currentIndexHistoryStack === 0 && isUndoAction)\n                {\n                    this.content = '';\n                    return;\n                }\n\n                this.currentIndexHistoryStack = this.currentIndexHistoryStack - (isUndoAction ? 1 : -1);\n                return this.historyStack[this.currentIndexHistoryStack];\n            }\n        },\n        computed: {\n            selectedText: function() {\n                return this.content.slice(this.$refs.field.selectionStart, this.$refs.field.selectionEnd);\n            }\n        },\n        components: {\n            Toolbar,\n            InformationModal\n        }\n    }\n</script>\n\n<style scoped>\n    .simple-markdown {\n        background-color: #ffffff;\n        border-radius: 5px;\n    }\n\n    .simple-markdown__field {\n        resize: none;\n        border: none;\n        outline: none;\n        padding: 5px;\n        width: 100%;\n        height: 100px;\n    }\n</style>"]}]}